diff -urNB kde-workspace-git/powerdevil/daemon/BackendConfig.cmake new/powerdevil/daemon/BackendConfig.cmake
--- kde-workspace-git/powerdevil/daemon/BackendConfig.cmake	2013-01-24 05:29:30.043485390 +0100
+++ new/powerdevil/daemon/BackendConfig.cmake	2013-01-24 07:59:47.856483880 +0100
@@ -9,6 +9,7 @@
 
 set(powerdevilupowerbackend_SRCS
     backends/upower/upowersuspendjob.cpp
+    backends/upower/login1suspendjob.cpp
     backends/upower/powerdevilupowerbackend.cpp
     backends/upower/xrandrbrightness.cpp
 )
diff -urNB kde-workspace-git/powerdevil/daemon/backends/upower/login1suspendjob.cpp new/powerdevil/daemon/backends/upower/login1suspendjob.cpp
--- kde-workspace-git/powerdevil/daemon/backends/upower/login1suspendjob.cpp	1970-01-01 01:00:00.000000000 +0100
+++ new/powerdevil/daemon/backends/upower/login1suspendjob.cpp	2013-01-24 07:59:47.857483880 +0100
@@ -0,0 +1,99 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2006 Kevin Ottens <ervin@kde.org>
+    Copyright (C) 2010 Alejandro Fiestas <alex@eyeos.org>
+    Copyright (C) 2013 LukÃ¡Å¡ Tinkl <ltinkl@redhat.com>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License version 2 as published by the Free Software Foundation.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+
+*/
+
+#include "login1suspendjob.h"
+
+#include <QtDBus/QDBusMessage>
+#include <QtDBus/QDBusReply>
+#include <QTimer>
+#include <KDebug>
+#include <KLocale>
+
+Login1SuspendJob::Login1SuspendJob(QDBusInterface *login1Interface,
+                                   PowerDevil::BackendInterface::SuspendMethod method,
+                                   PowerDevil::BackendInterface::SuspendMethods supported)
+    : KJob(), m_login1Interface(login1Interface)
+{
+    kDebug() << "Starting Login1 suspend job";
+    m_method = method;
+    m_supported = supported;
+}
+
+Login1SuspendJob::~Login1SuspendJob()
+{
+
+}
+
+void Login1SuspendJob::start()
+{
+    QTimer::singleShot(0, this, SLOT(doStart()));
+}
+
+void Login1SuspendJob::kill(bool /*quietly */)
+{
+
+}
+
+void Login1SuspendJob::doStart()
+{
+    if (m_supported & m_method)
+    {
+        QVariantList args;
+        args << true; // interactive, ie. with polkit dialogs
+
+        QDBusPendingReply<void> reply;
+        QDBusPendingCallWatcher *watcher = new QDBusPendingCallWatcher(reply, this);
+        connect(watcher, SIGNAL(finished(QDBusPendingCallWatcher*)), this, SLOT(sendResult(QDBusPendingCallWatcher*)));
+
+        switch(m_method)
+        {
+        case PowerDevil::BackendInterface::ToRam:
+            reply = m_login1Interface->asyncCallWithArgumentList("Suspend", args);
+            break;
+        case PowerDevil::BackendInterface::ToDisk:
+            reply = m_login1Interface->asyncCallWithArgumentList("Hibernate", args);
+            break;
+        case PowerDevil::BackendInterface::HybridSuspend:
+            reply = m_login1Interface->asyncCallWithArgumentList("HybridSleep", args);
+            break;
+        default:
+            kDebug() << "Unsupported suspend method";
+            setError(1);
+            setErrorText(i18n("Unsupported suspend method"));
+            break;
+        }
+    }
+}
+
+void Login1SuspendJob::sendResult(QDBusPendingCallWatcher *watcher)
+{
+    const QDBusPendingReply<void> reply = *watcher;
+    if (!reply.isError()) {
+        emitResult();
+    } else {
+        kWarning() << "Failed to start suspend job" << reply.error().name() << reply.error().message();
+    }
+
+    watcher->deleteLater();
+}
+
+
+#include "login1suspendjob.moc"
diff -urNB kde-workspace-git/powerdevil/daemon/backends/upower/login1suspendjob.h new/powerdevil/daemon/backends/upower/login1suspendjob.h
--- kde-workspace-git/powerdevil/daemon/backends/upower/login1suspendjob.h	1970-01-01 01:00:00.000000000 +0100
+++ new/powerdevil/daemon/backends/upower/login1suspendjob.h	2013-01-24 07:59:47.857483880 +0100
@@ -0,0 +1,54 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2006 Kevin Ottens <ervin@kde.org>
+    Copyright (C) 2010 Alejandro Fiestas <alex@eyeos.org>
+    Copyright (C) 2013 LukÃ¡Å¡ Tinkl <ltinkl@redhat.com>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Library General Public
+    License version 2 as published by the Free Software Foundation.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Library General Public License for more details.
+
+    You should have received a copy of the GNU Library General Public License
+    along with this library; see the file COPYING.LIB.  If not, write to
+    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+    Boston, MA 02110-1301, USA.
+
+*/
+
+#ifndef LOGIN1SUSPENDJOB_H
+#define LOGIN1SUSPENDJOB_H
+
+#include <kjob.h>
+#include <QtDBus/QDBusInterface>
+#include <QtDBus/QDBusMessage>
+#include <QtDBus/QDBusPendingCallWatcher>
+
+#include "powerdevilbackendinterface.h"
+
+class Login1SuspendJob : public KJob
+{
+    Q_OBJECT
+public:
+    Login1SuspendJob(QDBusInterface *login1Interface,
+                     PowerDevil::BackendInterface::SuspendMethod method,
+                     PowerDevil::BackendInterface::SuspendMethods supported);
+    virtual ~Login1SuspendJob();
+
+    void start();
+    void kill(bool quietly);
+
+private Q_SLOTS:
+    void doStart();
+    void sendResult(QDBusPendingCallWatcher* watcher);
+
+private:
+    QDBusInterface *m_login1Interface;
+    PowerDevil::BackendInterface::SuspendMethod m_method;
+    PowerDevil::BackendInterface::SuspendMethods m_supported;
+};
+
+#endif //LOGIN1SUSPENDJOB_H
diff -urNB kde-workspace-git/powerdevil/daemon/backends/upower/powerdevilupowerbackend.cpp new/powerdevil/daemon/backends/upower/powerdevilupowerbackend.cpp
--- kde-workspace-git/powerdevil/daemon/backends/upower/powerdevilupowerbackend.cpp	2013-01-24 05:29:30.113485393 +0100
+++ new/powerdevil/daemon/backends/upower/powerdevilupowerbackend.cpp	2013-01-24 07:59:47.858483880 +0100
@@ -2,7 +2,7 @@
     Copyright (C) 2006 Kevin Ottens <ervin@kde.org>
     Copyright (C) 2008-2010 Dario Freddi <drf@kde.org>
     Copyright (C) 2010 Alejandro Fiestas <alex@eyeos.org>
-    Copyright (C) 2010 Lukas Tinkl <ltinkl@redhat.com>
+    Copyright (C) 2010-2013 LukÃ¡Å¡ Tinkl <ltinkl@redhat.com>
 
     This library is free software; you can redistribute it and/or
     modify it under the terms of the GNU Library General Public
@@ -31,6 +31,7 @@
 
 #include "xrandrbrightness.h"
 #include "upowersuspendjob.h"
+#include "login1suspendjob.h"
 
 #define HELPER_ID "org.kde.powerdevil.backlighthelper"
 
@@ -80,11 +82,19 @@
 void PowerDevilUPowerBackend::init()
 {
     // interfaces
+    if (!QDBusConnection::systemBus().interface()->isServiceRegistered(LOGIN1_SERVICE)) {
+        // Activate it.
+        QDBusConnection::systemBus().interface()->startService(LOGIN1_SERVICE);
+    }
+
     if (!QDBusConnection::systemBus().interface()->isServiceRegistered(UPOWER_SERVICE)) {
         // Activate it.
         QDBusConnection::systemBus().interface()->startService(UPOWER_SERVICE);
     }
 
+    if (QDBusConnection::systemBus().interface()->isServiceRegistered(LOGIN1_SERVICE)) {
+        m_login1Interface = new QDBusInterface(LOGIN1_SERVICE, "/org/freedesktop/login1", "org.freedesktop.login1.Manager", QDBusConnection::systemBus(), this);
+    }
     m_upowerInterface = new OrgFreedesktopUPowerInterface(UPOWER_SERVICE, "/org/freedesktop/UPower", QDBusConnection::systemBus(), this);
     m_kbdBacklight = new OrgFreedesktopUPowerKbdBacklightInterface(UPOWER_SERVICE, "/org/freedesktop/UPower/KbdBacklight", QDBusConnection::systemBus(), this);
     m_brightnessControl = new XRandrBrightness();
@@ -113,7 +123,22 @@
 
     // Supported suspend methods
     SuspendMethods supported = UnknownSuspendMethod;
-    {
+    if (m_login1Interface) {
+        QDBusPendingReply<QString> canSuspend = m_login1Interface.data()->asyncCall("CanSuspend");
+        canSuspend.waitForFinished();
+        if (canSuspend.isValid() && (canSuspend.value() == "yes" || canSuspend.value() == "challenge"))
+            supported |= ToRam;
+
+        QDBusPendingReply<QString> canHibernate = m_login1Interface.data()->asyncCall("CanHibernate");
+        canHibernate.waitForFinished();
+        if (canHibernate.isValid() && (canHibernate.value() == "yes" || canHibernate.value() == "challenge"))
+            supported |= ToDisk;
+
+        QDBusPendingReply<QString> canHybridSleep = m_login1Interface.data()->asyncCall("CanHybridSleep");
+        canHybridSleep.waitForFinished();
+        if (canHybridSleep.isValid() && (canHybridSleep.value() == "yes" || canHybridSleep.value() == "challenge"))
+            supported |= HybridSuspend;
+    } else {
         if (m_upowerInterface->canSuspend() && m_upowerInterface->SuspendAllowed()) {
             kDebug() << "Can suspend";
             supported |= ToRam;
@@ -125,7 +150,14 @@
         }
     }
 
-    connect(m_upowerInterface, SIGNAL(Resuming()), this, SIGNAL(resumeFromSuspend()));
+#if 0
+    // CHECKME if login1 indeed has the resuming signal, it doesn't yet :/
+    // "resuming" signal
+    if (m_login1Interface) {
+        connect(m_login1Interface.data(), SIGNAL(PrepareForSleep(bool)), this, SLOT(slotLogin1Resuming(bool)));
+    } else
+#endif
+        connect(m_upowerInterface, SIGNAL(Resuming()), this, SIGNAL(resumeFromSuspend()));
 
     // battery
     QList<RecallNotice> recallList;
@@ -263,7 +295,11 @@
 
 KJob* PowerDevilUPowerBackend::suspend(PowerDevil::BackendInterface::SuspendMethod method)
 {
-    return new UPowerSuspendJob(m_upowerInterface, method, supportedSuspendMethods());
+    if (m_login1Interface) {
+        return new Login1SuspendJob(m_login1Interface.data(), method, supportedSuspendMethods());
+    } else {
+        return new UPowerSuspendJob(m_upowerInterface, method, supportedSuspendMethods());
+    }
 }
 
 void PowerDevilUPowerBackend::enumerateDevices()
@@ -354,4 +390,11 @@
     m_onBattery = onBattery;
 }
 
+void PowerDevilUPowerBackend::slotLogin1Resuming(bool active)
+{
+    if (!active) {
+        emit resumeFromSuspend();
+    }
+}
+
 #include "powerdevilupowerbackend.moc"
diff -urNB kde-workspace-git/powerdevil/daemon/backends/upower/powerdevilupowerbackend.h new/powerdevil/daemon/backends/upower/powerdevilupowerbackend.h
--- kde-workspace-git/powerdevil/daemon/backends/upower/powerdevilupowerbackend.h	2013-01-24 05:29:30.113485393 +0100
+++ new/powerdevil/daemon/backends/upower/powerdevilupowerbackend.h	2013-01-24 07:59:47.857483880 +0100
@@ -34,6 +34,7 @@
 #include "upower_kbdbacklight_interface.h"
 
 #define UPOWER_SERVICE "org.freedesktop.UPower"
+#define LOGIN1_SERVICE "org.freedesktop.login1"
 
 class XRandrBrightness;
 
@@ -63,6 +64,7 @@
     void slotDeviceRemoved(const QString &);
     void slotDeviceChanged(const QString &);
     void slotPropertyChanged();
+    void slotLogin1Resuming(bool active);
 
 private:
     // upower devices
@@ -74,6 +76,9 @@
     OrgFreedesktopUPowerInterface *m_upowerInterface;
     OrgFreedesktopUPowerKbdBacklightInterface *m_kbdBacklight;
 
+    // login1 interface
+    QWeakPointer<QDBusInterface> m_login1Interface;
+
     // buttons
     bool m_lidIsPresent;
     bool m_lidIsClosed;
diff -urNB kde-workspace-git/powerdevil/daemon/backends/upower/upowersuspendjob.cpp new/powerdevil/daemon/backends/upower/upowersuspendjob.cpp
--- kde-workspace-git/powerdevil/daemon/backends/upower/upowersuspendjob.cpp	2013-01-24 05:29:30.113485393 +0100
+++ new/powerdevil/daemon/backends/upower/upowersuspendjob.cpp	2013-01-24 08:00:39.203486365 +0100
@@ -25,7 +25,6 @@
 #include <QtDBus/QDBusMessage>
 #include <QtDBus/QDBusReply>
 #include <QTimer>
-#include <KConfig>
 #include <KDebug>
 #include <KLocale>
 
@@ -34,7 +33,7 @@
                                    PowerDevil::BackendInterface::SuspendMethods supported)
     : KJob(), m_upowerInterface(upowerInterface)
 {
-    kDebug() << "Starting Suspend job";
+    kDebug() << "Starting UPower suspend job";
     m_method = method;
     m_supported = supported;
 
diff -urNB kde-workspace-git/powerdevil/daemon/backends/upower/upowersuspendjob.h new/powerdevil/daemon/backends/upower/upowersuspendjob.h
--- kde-workspace-git/powerdevil/daemon/backends/upower/upowersuspendjob.h	2013-01-24 05:29:30.113485393 +0100
+++ new/powerdevil/daemon/backends/upower/upowersuspendjob.h	2013-01-24 07:59:47.858483880 +0100
@@ -25,7 +25,7 @@
 #include <QtDBus/QDBusInterface>
 #include <QtDBus/QDBusMessage>
 
-#include "powerdevilupowerbackend.h"
+#include "powerdevilbackendinterface.h"
 
 class OrgFreedesktopUPowerInterface;
 
@@ -34,8 +34,8 @@
     Q_OBJECT
 public:
     UPowerSuspendJob(OrgFreedesktopUPowerInterface *upowerInterface,
-                  PowerDevil::BackendInterface::SuspendMethod method,
-                  PowerDevil::BackendInterface::SuspendMethods supported);
+                     PowerDevil::BackendInterface::SuspendMethod method,
+                     PowerDevil::BackendInterface::SuspendMethods supported);
     virtual ~UPowerSuspendJob();
 
     void start();
